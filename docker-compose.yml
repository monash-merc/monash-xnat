version: '3'
services:
  xnat-web:
    build:
      context: tomcat
      dockerfile: Dockerfile
      args:
        LOCALE: $LOCALE
        XNAT_ROOT: ${XNAT_ROOT}
        XNAT_HOME: ${XNAT_HOME}
    ports:
      - "8081:8080"
      - "8104:8104"
    volumes:
      - $CINDER_DIR/plugins:${XNAT_HOME}/plugins
      - $CINDER_DIR/auth:${XNAT_HOME}/auth
      - $CINDER_DIR/logs/xnat:${XNAT_HOME}/logs
      - $DATA_DIR/archive:${XNAT_ROOT}/archive
      - $CINDER_DIR/build:${XNAT_ROOT}/build
      - $DATA_DIR/cache:${XNAT_ROOT}/cache
      - $DATA_DIR/ftp:${XNAT_ROOT}/ftp
      - $CINDER_DIR/pipeline:${XNAT_ROOT}/pipeline
      - $DATA_DIR/prearchive:${XNAT_ROOT}prearchive
      - $CINDER_DIR/webapps:/usr/local/tomcat/webapps
      - $CINDER_DIR/logs/tomcat:/usr/local/tomcat/logs
      - $DATA_DIR/tomcat_tmp:/usr/local/tomcat/temp
      - ./tomcat/server.xml:/opt/tomcat/conf/server.xml
      - ./tomcat/tomcat-users.xml:/opt/tomcat/conf/tomcat-users.xml
      - ./tomcat/xnat-conf.properties:${XNAT_HOME}/config/xnat-conf.properties
      - /var/run/docker.sock:/var/run/docker.sock
    expose:
      - "8080"
    depends_on:
      - xnat-db
    environment:
      - CATALINA_OPTS=-Xms128m -Xmx4096m -Dxnat.home=${XNAT_HOME} -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=8000
      - XNAT_HOME=${XNAT_HOME}
      - TZ=$TIMEZONE
    restart: always

  xnat-db:
    build:
      context: postgres
      dockerfile: Dockerfile
    expose:
      - "5432"
    volumes:
      - $CINDER_DIR/postgres:/var/lib/postgresql/data
      - /mnt/cinder/db_backups/xnat-backup-before-upgrade.out:/xnat-backup.out
    environment:
      - TZ=$TIMEZONE
      - POSTGRES_PASSWORD=password
    restart: always

  xnat-backup:
    build:
      context: backup
      dockerfile: Dockerfile
    depends_on:
      - xnat-db
    links:
      - xnat-db
    environment:
      SETUP_CRON: "0 3 * * *"
    volumes:
      - $BACKUP_DIR:/backups
    restart: always

  xnat-nginx:
    build:
      context: nginx
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    expose:
      - "80"
    links:
      - xnat-web
    environment:
      - TZ=$TIMEZONE
    volumes:
      - ./nginx/certs/cert.crt:/etc/nginx/certs/cert.crt
      - ./nginx/certs/key.key:/etc/nginx/certs/key.key
      - ./nginx/nginx-ssl.conf:/etc/nginx/nginx.conf
    restart: always

  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - '9090:9090'
    links:
      - cadvisor
    environment:
      - TZ=$TIMEZONE
    restart: always

  cadvisor:
    image: google/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - "8082:8080"
    expose:
      - 8082
    environment:
      - TZ=$TIMEZONE
    restart: always
